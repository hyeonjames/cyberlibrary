<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAB4AHgDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD2zTtOsTploTZW2TCn/LJf7o9qs/2bYf8APlbf9+l/wo03/kF2
        n/XBP/QRVqgCr/Zth/z5W3/fpf8ACj+zbD/nytv+/S/4VaooAq/2bYf8+Vt/36X/AAo/s2w/58rb/v0v
        +FWqKAKv9m2H/Plbf9+l/wAKP7NsP+fK2/79L/hVqigCr/Zth/z5W3/fpf8ACj+zbD/nytv+/S/4Vaoo
        Aq/2bYf8+Vt/36X/AAo/s2w/58rb/v0v+FWqKAKv9m2H/Plbf9+l/wAKP7NsP+fK2/79L/hVqigCr/Zt
        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
        UUUUAFFFFABRRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
</root>